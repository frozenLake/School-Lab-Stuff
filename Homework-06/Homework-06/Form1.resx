<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>